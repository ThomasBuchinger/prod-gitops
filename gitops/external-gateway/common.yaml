---
apiVersion: v1
kind: Namespace
metadata:
  name: external-gateway
spec: {}

---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: external-cert
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: k8s-evergreen
    kind: ClusterSecretStore
  target:
    name: cert-cloud-buc-sh
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls
  dataFrom:
  - extract:
      conversionStrategy: Default
      decodingStrategy: None
      metadataPolicy: None
      key: cert-secure-http-buc-sh

---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: gwclass-external
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  parametersRef:
    group: gateway.envoyproxy.io
    kind: EnvoyProxy
    name: config
    namespace: external-gateway

---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: external-gateway
spec:
  gatewayClassName: gwclass-external
  listeners:
  - name: http
    protocol: HTTP
    port: 80
  - name: https
    protocol: HTTPS
    port: 443
    tls:
      mode: Terminate
      certificateRefs:
      - kind: Secret
        group: ""
        name: cert-cloud-buc-sh
  - name: mtls
    protocol: HTTPS
    port: 444
    tls:
      mode: Terminate
      certificateRefs:
      - kind: Secret
        group: ""
        name: cert-cloud-buc-sh

---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: config
spec:
  provider:
    type: Kubernetes
    kubernetes:
      envoyDeployment:
        replicas: 1
        container:
        #   image: envoyproxy/envoy:v1.26-latest
          resources:
            requests:
              cpu: 150m
              memory: 640Mi
        #     limits:
        #       cpu: 500m
        #       memory: 1Gi
      envoyService:
        type: NodePort
        name: external-gateway
    bootstrap: |-
      admin:
        access_log:
        - name: envoy.access_loggers.file
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            path: /dev/null
        address:
          socket_address:
            address: 0.0.0.0                 # Enable Admin API 
            port_value: 19000
      cluster_manager:
        local_cluster_name: local_cluster
      node:
        locality:
          zone: $(ENVOY_SERVICE_ZONE)
      layered_runtime:
        layers:
        - name: global_config
          static_layer:
            envoy.restart_features.use_eds_cache_for_ads: true
            re2.max_program_size.error_level: 4294967295
            re2.max_program_size.warn_level: 1000
      dynamic_resources:
        ads_config:
          api_type: DELTA_GRPC
          transport_api_version: V3
          grpc_services:
          - envoy_grpc:
              cluster_name: xds_cluster
          set_node_on_first_message_only: true
        lds_config:
          ads: {}
          resource_api_version: V3
        cds_config:
          ads: {}
          resource_api_version: V3
      static_resources:
        listeners:
        - name: envoy-gateway-proxy-stats-0.0.0.0-19001
          address:
            socket_address:
              address: '0.0.0.0'
              port_value: 19001
              protocol: TCP
          bypass_overload_manager: true
          filter_chains:
          - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: eg-stats-http
                normalize_path: true
                route_config:
                  name: local_route
                  virtual_hosts:
                  - name: prometheus_stats
                    domains:
                    - "*"
                    routes:
                    - match:
                        path: /stats/prometheus
                        headers:
                        - name: ":method"
                          string_match:
                            exact: GET
                      route:
                        cluster: prometheus_stats
                http_filters:
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        clusters:
        - name: prometheus_stats
          connect_timeout: 0.250s
          type: STATIC
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: prometheus_stats
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 19000
        - connect_timeout: 10s
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: local_cluster
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 10080
                load_balancing_weight: 1
              load_balancing_weight: 1
              locality:
                zone: $(ENVOY_SERVICE_ZONE)
          name: local_cluster
          type: STATIC
        - connect_timeout: 10s
          load_assignment:
            cluster_name: xds_cluster
            endpoints:
            - load_balancing_weight: 1
              lb_endpoints:
              - load_balancing_weight: 1
                endpoint:
                  address:
                    socket_address:
                      address: envoy-gateway.external-gateway.svc.cluster.local
                      port_value: 18000
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions"
              explicit_http_config:
                http2_protocol_options:
                  connection_keepalive:
                    interval: 30s
                    timeout: 5s
          name: xds_cluster
          type: STRICT_DNS
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                tls_params:
                  tls_maximum_protocol_version: TLSv1_3
                tls_certificate_sds_secret_configs:
                - name: xds_certificate
                  sds_config:
                    path_config_source:
                      path: /sds/xds-certificate.json
                    resource_api_version: V3
                validation_context_sds_secret_config:
                  name: xds_trusted_ca
                  sds_config:
                    path_config_source:
                      path: /sds/xds-trusted-ca.json
                    resource_api_version: V3
        - name: wasm_cluster
          type: STRICT_DNS
          connect_timeout: 10s
          load_assignment:
            cluster_name: wasm_cluster
            endpoints:
            - load_balancing_weight: 1
              lb_endpoints:
              - load_balancing_weight: 1
                endpoint:
                  address:
                    socket_address:
                      address: envoy-gateway
                      port_value: 18002
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions"
              explicit_http_config:
                http2_protocol_options: {}
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                tls_params:
                  tls_maximum_protocol_version: TLSv1_3
                tls_certificate_sds_secret_configs:
                - name: xds_certificate
                  sds_config:
                    path_config_source:
                      path: /sds/xds-certificate.json
                    resource_api_version: V3
                validation_context_sds_secret_config:
                  name: xds_trusted_ca
                  sds_config:
                    path_config_source:
                      path: /sds/xds-trusted-ca.json
                    resource_api_version: V3
      overload_manager:
        refresh_interval: 0.25s
        resource_monitors:
        - name: "envoy.resource_monitors.global_downstream_max_connections"
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig
            max_active_downstream_connections: 50000

---
kind: Service
apiVersion: v1
metadata:
  name: external-gateway
spec:
  externalTrafficPolicy: Local
  selector:
    app.kubernetes.io/component: proxy
    app.kubernetes.io/managed-by: envoy-gateway
    app.kubernetes.io/name: envoy
    gateway.envoyproxy.io/owning-gateway-name: external-gateway
    gateway.envoyproxy.io/owning-gateway-namespace: external-gateway
  type: NodePort
  ports:
  - name: http-80
    port: 80
    nodePort: 32081
    targetPort: 10080
  - name: https-443
    port: 443
    nodePort: 32082
    targetPort: 10443
  - name: mtls-444
    port: 444
    nodePort: 32083
    targetPort: 10444
  - name: metrics
    port: 19001
    targetPort: 19001
  - name: admin
    port: 19000
    targetPort: 19000
  # - name: ui
  #   port: 9000
  #   targetPort: 9000


# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: envoy-metrics
#   labels:
#     release: monitoring
# spec:
#   endpoints:
#   - honorLabels: true
#     port: "admin"
#     path: /stats/prometheus
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: envoy
#       app.kubernetes.io/instance: external-http

