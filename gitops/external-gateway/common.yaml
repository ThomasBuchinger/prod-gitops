---
apiVersion: v1
kind: Namespace
metadata:
  name: external-gateway
spec: {}

---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: external-cert
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: k8s-evergreen
    kind: ClusterSecretStore
  target:
    name: cert-cloud-buc-sh
    creationPolicy: Owner
  dataFrom:
  - extract:
      conversionStrategy: Default
      decodingStrategy: None
      metadataPolicy: None
      key: cert-secure-http-buc-sh

---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: gwclass-external
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  parametersRef:
    group: gateway.envoyproxy.io
    kind: EnvoyProxy
    name: config
    namespace: external-gateway

---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: external-gateway
spec:
  gatewayClassName: gwclass-external
  listeners:
  - name: http
    protocol: HTTP
    port: 80
  - name: https
    protocol: HTTPS
    port: 443
  - name: mtls
    protocol: HTTPS
    port: 444

---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: config
spec:
  provider:
    type: Kubernetes
    kubernetes:
      envoyDeployment:
        replicas: 2
        container:
        #   image: envoyproxy/envoy:v1.26-latest
          resources:
            requests:
              cpu: 150m
              memory: 640Mi
        #     limits:
        #       cpu: 500m
        #       memory: 1Gi
      envoyService:
        type: NodePort
        name: external-gateway
    

---
kind: Service
apiVersion: v1
metadata:
  name: external-gateway
spec:
  externalTrafficPolicy: Local
  selector:
    gateway.envoyproxy.io/owning-gateway-name: external-gateway
    gateway.envoyproxy.io/owning-gateway-namespace: external-gateway
  type: NodePort
  ports:
  - name: http
    port: 80
    nodePort: 32081
    targetPort: 80
  - name: https
    port: 443
    nodePort: 32082
    targetPort: 443
  - name: mtls
    port: 444
    nodePort: 32083
    targetPort: 444
  - name: matrics
    port: 19001
    targetPort: 19001
  # - name: admin
  #   port: 9901
  #   targetPort: 9901
  # - name: ui
  #   port: 9000
  #   targetPort: 9000


# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: envoy-metrics
#   labels:
#     release: monitoring
# spec:
#   endpoints:
#   - honorLabels: true
#     port: "admin"
#     path: /stats/prometheus
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: envoy
#       app.kubernetes.io/instance: external-http

