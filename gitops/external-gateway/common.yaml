---
apiVersion: v1
kind: Namespace
metadata:
  name: external-gateway
spec: {}

---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: external-cert
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: k8s-evergreen
    kind: ClusterSecretStore
  target:
    name: cert-cloud-buc-sh
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls
  dataFrom:
  - extract:
      conversionStrategy: Default
      decodingStrategy: None
      metadataPolicy: None
      key: cert-secure-http-buc-sh

---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: gwclass-external
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  parametersRef:
    group: gateway.envoyproxy.io
    kind: EnvoyProxy
    name: config
    namespace: external-gateway

---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: external-gateway
spec:
  gatewayClassName: gwclass-external
  listeners:
  - name: http
    protocol: HTTP
    port: 80
  - name: https
    protocol: HTTPS
    port: 443
    tls:
      mode: Terminate
      certificateRefs:
      - kind: Secret
        group: ""
        name: cert-cloud-buc-sh
  - name: mtls
    protocol: HTTPS
    port: 444
    tls:
      mode: Terminate
      certificateRefs:
      - kind: Secret
        group: ""
        name: cert-cloud-buc-sh

---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: config
spec:
  provider:
    type: Kubernetes
    kubernetes:
      envoyDeployment:
        replicas: 1
        container:
        #   image: envoyproxy/envoy:v1.26-latest
          resources:
            requests:
              cpu: 150m
              memory: 640Mi
        #     limits:
        #       cpu: 500m
        #       memory: 1Gi
      envoyService:
        type: NodePort
        name: external-gateway
  bootstrap:
    type: Merge
    value: |-
      admin:
        address:
          socket_address:
            address: 0.0.0.0
    jsonPatches: []
---
kind: Service
apiVersion: v1
metadata:
  name: external-gateway
spec:
  externalTrafficPolicy: Local
  selector:
    app.kubernetes.io/component: proxy
    app.kubernetes.io/managed-by: envoy-gateway
    app.kubernetes.io/name: envoy
    gateway.envoyproxy.io/owning-gateway-name: external-gateway
    gateway.envoyproxy.io/owning-gateway-namespace: external-gateway
  type: NodePort
  ports:
  - name: http-80
    port: 80
    nodePort: 32081
    targetPort: 10080
  - name: https-443
    port: 443
    nodePort: 32082
    targetPort: 10443
  - name: mtls-444
    port: 444
    nodePort: 32083
    targetPort: 10444
  - name: metrics
    port: 19001
    targetPort: 19001
  - name: admin
    port: 19000
    targetPort: 19000
  # - name: ui
  #   port: 9000
  #   targetPort: 9000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: envoy-admin
spec:
  rules:
  - host: envoy-gateway.10.0.0.21.nip.io
    http:
      paths:
      - path: /ui
        pathType: Prefix
        backend:
          service:
            name: envoy-ui
            port:
              name: ui
      - path: /
        pathType: Prefix
        backend:
          service:
            name: external-gateway
            port:
              name: admin


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-ui
  labels:
    app.kubernetes.io/name: envoy-ui
    app.kubernetes.io/instance: external-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: envoy-ui
      app.kubernetes.io/instance: external-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: envoy-ui
        app.kubernetes.io/instance: external-gateway
    spec:
      containers:
      - name: envoy-ui
        image: gonitro/envoy-ui:42bae1c
        imagePullPolicy: IfNotPresent
        command:
        - envoy-ui/envoy-ui
        - "--listen-port=9000"
        - "--host=external-gateway.svc"
        - "--port=19000"
        env: []
        ports:
        - name: ui
          containerPort: 9000
        livenessProbe:
          httpGet:
            path: /
            scheme: HTTP
            port: ui
        readinessProbe:
          httpGet:
            path: /
            scheme: HTTP
            port: ui
        resources:
          requests:
            cpu: 5m
            memory: 64Mi
          limits: {}
      securityContext: {}
      terminationGracePeriodSeconds: 10

---
kind: Service
apiVersion: v1
metadata:
  name: envoy-ui
  labels:
    app.kubernetes.io/name: envoy-ui
    app.kubernetes.io/instance: external-gateway
spec:
  selector:
    app.kubernetes.io/name: envoy-ui
    app.kubernetes.io/instance: external-gateway
  type: ClusterIP
  ports:
  - name: ui
    port: 9000
    targetPort: 9000



# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: envoy-metrics
#   labels:
#     release: monitoring
# spec:
#   endpoints:
#   - honorLabels: true
#     port: "admin"
#     path: /stats/prometheus
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: envoy
#       app.kubernetes.io/instance: external-http

