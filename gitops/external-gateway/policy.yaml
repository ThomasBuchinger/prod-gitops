
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: ClientTrafficPolicy
metadata:
  name: mtls-policy
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: external-gateway
    sectionName: mtls
  tls:
    clientValidation:
      optional: false
      caCertificateRefs:
      - kind: "Secret"
        group: ""
        name: "root-ca-mtls"

---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyPatchPolicy
metadata:
  name: patch-geoip-filter
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: Gateway
    name: external-gateway
  type: JSONPatch
  jsonPatches:
  - type: "type.googleapis.com/envoy.config.listener.v3.Listener"
    name: external-gateway/external-gateway/http
    operation:
      op: add
      path: "/default_filter_chain/filters/0/typed_config/http_filters/0"
      value: &geoip
        name: envoy.filters.http.geoip
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.geoip.v3.Geoip
          xff_config:
            xff_num_trusted_hops: 1
          provider:
              name: "envoy.geoip_providers.maxmind"
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.geoip_providers.maxmind.v3.MaxMindConfig
                common_provider_config:
                  geo_headers_to_add:
                    country: "x-geo-country"
                    # region: "x-geo-region"
                    city: "x-geo-city"
                    # asn: "x-geo-asn"
                city_db_path: "/geoip-envoy/GeoLite2-City.mmdb"

  - type: "type.googleapis.com/envoy.config.listener.v3.Listener"
    name: external-gateway/external-gateway/https
    operation:
      op: add
      path: "/filter_chains/0/filters/0/typed_config/http_filters/0"
      value: *geoip

  - type: "type.googleapis.com/envoy.config.listener.v3.Listener"
    name: external-gateway/external-gateway/mtls
    operation:
      op: add
      path: "/filter_chains/0/filters/0/typed_config/http_filters/0"
      value: *geoip
