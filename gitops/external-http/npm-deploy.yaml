---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-proxy-manager
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/instance: nginx-proxy-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
      app.kubernetes.io/instance: nginx-proxy-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx
        app.kubernetes.io/instance: nginx-proxy-manager
    spec:
      containers:
      - name: nginx
        image: 'jc21/nginx-proxy-manager:latest'
        # image: cgr.dev/chainguard/nginx:latest
        imagePullPolicy: IfNotPresent
        env: []
        ports:
        - name: http
          containerPort: 80
        - name: ui
          containerPort: 81
        - name: https
          containerPort: 443
        livenessProbe:
        #   # failureThreshold: 3
        #   # periodSeconds: 10
        #   # successThreshold: 1
        #   # timeoutSeconds: 1
          httpGet:
            path: /
            port: http
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: http
        resources:
          requests:
            cpu: 5m
            memory: 64Mi
          limits: {}
        # securityContext:
        #   allowPrivilegeEscalation: false
        #   capabilities:
        #     add:
        #     - NET_BIND_SERVICE
        #     drop:
        #     - ALL
        #   seccompProfile:
        #     type: RuntimeDefault
        volumeMounts: []
      securityContext: {}
      volumes:
      - name: data
        emptyDir: {}

---
kind: Service
apiVersion: v1
metadata:
  name: nginx-proxy-manager
spec:
  selector:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/instance: nginx-proxy-manager
  type: NodePort
  ports:
  - name: http
    port: 80
    nodePort: 32080
    targetPort: 80
  - name: https
    port: 443
    nodePort: 32443
    targetPort: 443
  - name: ui
    port: 81
    targetPort: 81

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-proxy-manager
  # annotations:
  #   cert-manager.io/cluster-issuer: letsencrypt-prod-cloudflare-dns
spec:
  # tls:
  # - hosts:
  #   - prod-console.buc.sh
  #   secretName: cert-evergreen-console-buc-sh
  rules:
  - host: external-http.buc.sh
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-proxy-manager
            port:
              name: ui

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-proxy-manager-http
spec:
  rules:
  - host: external-http.10.0.0.21.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-proxy-manager
            port:
              name: ui