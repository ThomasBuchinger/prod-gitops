---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage-external
  namespace: external-http
  labels:
    app.kubernetes.io/name: homepage-external
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: homepage-external
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homepage-external
    spec:
      containers:
      - name: homepage
        image: ghcr.io/thomasbuchinger/homepage-external:main
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /
            port: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: homepage-external
  namespace: external-http
spec:
  selector:
    app.kubernetes.io/name: homepage-external
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: homepage
#   namespace: homepage
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt-prod-cloudflare-dns
# spec:
#   tls:
#   - hosts:
#     - status.buc.sh
#     secretName: cert-status-buc-sh
#   rules:
#   - host: status.buc.sh
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: homepage
#             port:
#               number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homepage-external-http
  namespace: external-http
spec:
  rules:
  - host: apps.10.0.0.21.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: homepage-external
            port:
              number: 8080

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: block-homepage-egress
  namespace: external-http
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: external-http
  policyTypes:
    - Egress
    - Ingress
  egress:
  - to:
    - ipBlock:
        cidr: "0.0.0.0/0"
  ingress:
  # Allow Ingress
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: traefik
    ports:
    - protocol: TCP
      port: 8080

