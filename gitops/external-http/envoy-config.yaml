admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  # Handle HTTP Traffic: Redirect everything to https
  #
  - name: http
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    per_connection_buffer_limit_bytes: 32768                        # 32 KB. [Recommended Setting](https://www.envoyproxy.io/docs/envoy/v1.28.0/configuration/best_practices/edge)
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager         # Assume all traffic is http and use the http-configuration (as opposed to TCP/UDP configuration)
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: public_http
          use_remote_address: true
          normalize_path: true
          merge_slashes: true
          path_with_escaped_slashes_action: UNESCAPE_AND_REDIRECT
          common_http_protocol_options:
            idle_timeout: 600s  # 10 mins
            headers_with_underscores_action: REJECT_REQUEST
          http2_protocol_options:
            max_concurrent_streams: 100
            initial_stream_window_size: 65536  # 64 KiB
            initial_connection_window_size: 1048576  # 1 MiB
          stream_idle_timeout: 600s  # 10 mins, must be disabled for long-lived and streaming requests
          request_timeout: 60s  # 1 min, must be disabled for long-lived and streaming requests                               # Don't Trust remote address in header. Use IP instead. [Recommended Setting](https://www.envoyproxy.io/docs/envoy/v1.28.0/configuration/best_practices/edge)
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:                                             # Pass Request directly to the router, without any other filters
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: http_redirect
            virtual_hosts:
            - name: all_hosts
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                redirect:
                  https_redirect: true
                  path_redirect: "/"
  # Main HTTPS Listener (router)
  #
  - name: https
    address:
      socket_address:
        address: "0.0.0.0"
        port_value: 8443
    listener_filters:
    - name: "envoy.filters.listener.tls_inspector"
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    per_connection_buffer_limit_bytes: 32768                        # 32 KB. [Recommended Setting](https://www.envoyproxy.io/docs/envoy/v1.28.0/configuration/best_practices/edge)
    filter_chains:
    - transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain: {filename: "cert/tls.crt"}
              private_key: {filename: "cert/tls.key"}
            alpn_protocols: ["h2,http/1.1"]

      filters:
      - name: envoy.filters.network.http_connection_manager         # Assume all traffic is http and use the http-configuration (as opposed to TCP/UDP configuration)
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: public_https
          use_remote_address: true
          normalize_path: true
          merge_slashes: true
          path_with_escaped_slashes_action: UNESCAPE_AND_REDIRECT
          common_http_protocol_options:
            idle_timeout: 600s  # 10 mins
            headers_with_underscores_action: REJECT_REQUEST
          http2_protocol_options:
            max_concurrent_streams: 100
            initial_stream_window_size: 65536  # 64 KiB
            initial_connection_window_size: 1048576  # 1 MiB
          stream_idle_timeout: 600s  # 10 mins, must be disabled for long-lived and streaming requests
          request_timeout: 60s  # 1 min, must be disabled for long-lived and streaming requests                               # Don't Trust remote address in header. Use IP instead. [Recommended Setting](https://www.envoyproxy.io/docs/envoy/v1.28.0/configuration/best_practices/edge)
          route_config:
            name: main_router
            virtual_hosts:
            - name: apps-cloud-buc-sh
              domains:
              - apps.cloud.buc.sh
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: homepage
                  prefix_rewrite: /external/api
          http_filters:
          # Blocking any Request ype that is not GET.
          # We could have used RBAC configuration (https://www.envoyproxy.io/docs/envoy/v1.28.0/start/sandboxes/rbac), but that would have been more verbose
          #
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              default_source_code:
                inline_string: |
                  function envoy_on_request(request_handle)
                    if request_handle:headers():get(":method") ~= "GET" then
                      request_handle:respond(
                        {[":status"] = "301", [":method"] = "GET", ["Location"] = "https://google.at"},
                        "Only GET requests allowed")
                    end
                  end
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  - name: homepage
    type: LOGICAL_DNS
    load_assignment:
      cluster_name: homepage
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: status.buc.sh
                port_value: 443
    # health_checks:
    # - timeout: 3s
    #   interval: 30s
    #   unhealthy_threshold: 3
    #   healthy_threshold: 1
    #   http_health_check:
    #     path: "/external"
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: status.buc.sh
    # typed_extension_protocol_options:
    #   envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
    #     "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
    #     explicit_http_config:
    #       http2_protocol_options:
    #         initial_stream_window_size: 65536  # 64 KiB
    #         initial_connection_window_size: 1048576  # 1 MiB

# Overload Manager stops accepting connection if memory is running out
# [Recommended Settings](https://www.envoyproxy.io/docs/envoy/v1.28.0/configuration/best_practices/edge)
overload_manager:
  refresh_interval:
    # Check 4 times per second
    seconds: 0
    nanos: 250000000
  resource_monitors:
  # We only monitor HEAP space.
  - name: "envoy.resource_monitors.fixed_heap"
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.resource_monitors.fixed_heap.v3.FixedHeapConfig
      max_heap_size_bytes: 2147483648  # 2GB
  # Try closing connections at 95% HEAP, stop accepting new requests at 95% HEAP
  actions:
  - name: "envoy.overload_actions.disable_http_keepalive"
    triggers:
    - name: "envoy.resource_monitors.fixed_heap"
      threshold:
        value: 0.92
  - name: "envoy.overload_actions.stop_accepting_requests"
    triggers:
    - name: "envoy.resource_monitors.fixed_heap"
      threshold:
        value: 0.95
  loadshed_points:
  - name: "envoy.load_shed_points.tcp_listener_accept"
    triggers:
      - name: "envoy.resource_monitors.fixed_heap"
        threshold:
          value: 0.95
layered_runtime:
  layers:
  - name: static_layer_0
    static_layer:
      envoy:
        resource_limits:
          listener:
            http:
              connection_limit: 10000
            https:
              connection_limit: 10000
      overload:
        global_downstream_max_connections: 50000