admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  # Handle HTTP Traffic: Redirect everything to https
  #
  - name: http
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager         # Assume all traffic is http and use the http-configuration (as opposed to TCP/UDP configuration)
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: public_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:                                             # Pass Request directly to the router, without any other filters
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: http_redirect
            virtual_hosts:
            - name: all_hosts
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                redirect:
                  https_redirect: true
                  path_redirect: "/"
  # Main HTTPS Listener (router)
  #
  - name: https
    address:
      socket_address:
        address: "0.0.0.0"
        port_value: 8443
    filter_chains:
    - transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain: {filename: "cert/tls.crt"}
              private_key: {filename: "cert/tls.key"}
      filters:
      - name: envoy.filters.network.http_connection_manager         # Assume all traffic is http and use the http-configuration (as opposed to TCP/UDP configuration)
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: public_https
          route_config:
            name: main_router
            virtual_hosts:
            # - name: blackhole
            #   domains:
            #   - "*.cloud.buc.sh"
            #   routes:
            #   - match:
            #       prefix: "/"
            #       headers:
            #       - name: ":method"
            #         string_match:
            #           safe_regex:
            #             regex: "GET"
            #     direct_response:
            #       status: 444
            #       body:
            #         inline_string: "not ok"
            - name: apps-cloud-buc-sh
              domains:
              - apps.cloud.buc.sh
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: external-homepage
          http_filters:
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              default_source_code:
                inline_string: |
                  function envoy_on_request(request_handle)
                    if request_handle:headers():get(":method") == "GET" then
                      request_handle:respond(
                        {[":status"] = "403",
                        ["upstream_foo"] = headers["foo"]},
                        "nope")
                    end
                  end
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  - name: external-homepage
    type: LOGICAL_DNS
    load_assignment:
      cluster_name: external-homepae
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: homepage-external
                port_value: 8080
    health_checks:
    - timeout: 3s
      interval: 30s
      unhealthy_threshold: 3
      healthy_threshold: 1
      http_health_check:
        path: "/"
    # transport_socket:
    #   name: envoy.transport_sockets.tls
    #   typed_config:
    #     "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
    #     sni: www.envoyproxy.io
