---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: external-cert
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-approle-cluster
    kind: ClusterSecretStore
  target:
    name: cert-cloud-buc-sh
    creationPolicy: Owner
  dataFrom:
  - extract:
      conversionStrategy: Default
      decodingStrategy: None
      key: cert/cert-secure-http-buc-sh

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-http
  labels:
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: external-http
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: envoy
      app.kubernetes.io/instance: external-http
  template:
    metadata:
      labels:
        app.kubernetes.io/name: envoy
        app.kubernetes.io/instance: external-http
    spec:
      containers:
      - name: envoy
        image: envoyproxy/envoy:dev
        imagePullPolicy: IfNotPresent
        command:
        - envoy
        - -c
        - /config/envoy-config.yaml
        env: []
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        - name: admin
          containerPort: 9901
        livenessProbe:
          httpGet:
            path: /ready
            port: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        resources:
          requests:
            cpu: 5m
            memory: 64Mi
          limits: {}
        volumeMounts:
        - name: envoy-cm
          mountPath: /config
        - name: wildcard-cert
          mountPath: /cert
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
      - name: envoy-ui
        image: gonitro/envoy-ui:42bae1c
        imagePullPolicy: IfNotPresent
        command:
        - envoy-ui/envoy-ui
        - "--listen-port=9000"
        env: []
        ports:
        - name: ui
          containerPort: 9000
        livenessProbe:
          httpGet:
            path: /
            scheme: HTTP
            port: ui
        readinessProbe:
          httpGet:
            path: /
            scheme: HTTP
            port: ui
        resources:
          requests:
            cpu: 5m
            memory: 64Mi
          limits: {}

      securityContext: {}
      terminationGracePeriodSeconds: 10
      volumes:
      - name: envoy-cm
        configMap:
          name: envoy-cm
      - name: wildcard-cert
        secret:
          secretName: cert-cloud-buc-sh

---
kind: Service
apiVersion: v1
metadata:
  name: external-http
spec:
  externalTrafficPolicy: Local
  selector:
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: external-http
  type: NodePort
  ports:
  - name: http
    port: 80
    nodePort: 32080
    targetPort: 8080
  - name: https
    port: 443
    nodePort: 32443
    targetPort: 8443
  - name: admin
    port: 9901
    targetPort: 9901
  - name: ui
    port: 9000
    targetPort: 9000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: envoy-admin
  # annotations:
  #   cert-manager.io/cluster-issuer: letsencrypt-prod-cloudflare-dns
spec:
  # tls:
  # - hosts:
  #   - prod-console.buc.sh
  #   secretName: cert-evergreen-console-buc-sh
  rules:
  - host: envoy.buc.sh
    http:
      paths:
      - path: /ui
        pathType: Prefix
        backend:
          service:
            name: external-http
            port:
              name: ui
      - path: /
        pathType: Prefix
        backend:
          service:
            name: external-http
            port:
              name: admin


---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: envoy-metrics
  # namespace: monitoring
  labels:
    app: kube-prometheus-stack-kube-controller-manager
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kube-prometheus-stack
    app.kubernetes.io/version: 52.1.0
    chart: kube-prometheus-stack-52.1.0
    heritage: Helm
    jobLabel: envoy2
    release: monitoring
    # app.kubernetes.io/instance: monitoring
    # jobLabel: envoy
spec:
  endpoints:
  - honorLabels: true
    port: admin
    path: /stats/prometheus
  jobLabel: app.kubernetes.io/name
  namespaceSelector:
    matchNames:
      - external-http
  selector:
    matchLabels:
      app.kubernetes.io/name: envoy
      app.kubernetes.io/instance: external-http



---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: kube-prometheus-stack-kube-controller-manager
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kube-prometheus-stack
    app.kubernetes.io/version: 52.1.0
    chart: kube-prometheus-stack-52.1.0
    heritage: Helm
    jobLabel: envoy
    release: monitoring
  name: test-svcmonitor
  # namespace: monitoring
spec:
  endpoints:
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      port: http-metrics
      scheme: https
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecureSkipVerify: true
  jobLabel: jobLabel
  namespaceSelector:
    matchNames:
      - kube-system
  selector:
    matchLabels:
      app: kube-prometheus-stack-kube-controller-manager
      release: monitoring
