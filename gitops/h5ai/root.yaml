---
apiVersion: v1
kind: Namespace
metadata:
  name: h5ai

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: h5ai-root
  namespace: h5ai
  labels:
    app.kubernetes.io/instance: root
    app.kubernetes.io/name: h5ai
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: root
      app.kubernetes.io/name: h5ai
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: root
        app.kubernetes.io/name: h5ai
    spec:
      # securityContext:
      #   runAsNonRoot: true
      #   runAsUser: 1001
      #   runAsGroup: 1001
      #   fsGroup: 1001
      automountServiceAccountToken: true
      containers:
      - name: h5ai
        image:  awesometic/h5ai
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          tcpSocket:
            port: 80
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          tcpSocket:
            port: 80
        resources:
          requests:
            cpu: 5m
            memory: 20Mi
          limits: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            # - DAC_OVERRIDE
            - SETUID
            - SETGID
            - NET_BIND_SERVICE
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /h5ai/paperless
          name: dummy
          readOnly: true
        - mountPath: /h5ai/syncthing
          name: dummy
          readOnly: true
        - mountPath: /h5ai/nfs
          name: dummy
          readOnly: true
      volumes:
      - name: dummy
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: h5ai-root
  namespace: h5ai
  labels:
    app.kubernetes.io/instance: root
    app.kubernetes.io/name: h5ai
spec:
  selector:
    app.kubernetes.io/instance: root
    app.kubernetes.io/name: h5ai
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: h5ai-root
  namespace: h5ai
  labels:
    app.kubernetes.io/instance: root
    app.kubernetes.io/name: h5ai
spec:
  rules:
  - host: files.buc.sh
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: h5ai-root
            port:
              number: 80

