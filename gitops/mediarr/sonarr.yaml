---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
      - name: sonarr
        image: lscr.io/linuxserver/sonarr:latest
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
          # limits:
          #   memory: "128Mi"
        ports:
        - containerPort: 8989
          name: http
        env:
        - name: TZ
          value: Europe/Vienna
        - name: PUID
          value: "99"
        - name: PGID
          value: "100"
        envFrom:
        - configMapRef:
            name: arr-config
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        securityContext:
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            # - FOWNER
            # - DAC_OVERRIDE
            # - AUDIT_WRITE
            # - FSETID
            # - KILL
            # - MKNOD
            # - NET_BIND_SERVICE
            # - SETFCAP
            # - SETPCAP
            # - SYS_CHROOT
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: config
          mountPath: "/config"
          subPath: sonarr
        - name: media
          mountPath: "/media/nas"
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: mediarr-config
      - name: media
        persistentVolumeClaim:
          claimName: mediarr-media

---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
spec:
  selector:
    app: sonarr
  ports:
  - name: http
    port: 8989
    targetPort: http
