---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
      - name: radarr
        image: lscr.io/linuxserver/radarr:latest
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
          # limits:
          #   memory: "128Mi"
        ports:
        - containerPort: 7878
          name: http
        env:
        - name: TZ
          value: Europe/Vienna
        - name: PUID
          value: "99"
        - name: PGID
          value: "100"

        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 99
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: config
          mountPath: "app/config"
          subPath: radarr
        - name: dummy
          mountPath: "/media"
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: mediarr-config
        - name: media
          persistentVolumeClaim:
            claimName: mediarr-media
        - name: dummy
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: radarr
spec:
  selector:
    app: radarr
  ports:
  - name: http
    port: 7878
    targetPort: http

# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: radarr
# spec:
#   podSelector:
#     matchLabels:
#       app.kubernetes.io/name: radarr
#   policyTypes:
#     - Ingress
#     - Egress
#   ingress:
#   # Allow Ingress
#   - from:
#     - namespaceSelector:
#         matchLabels:
#           kubernetes.io/metadata.name: traefik
#     - namespaceSelector:
#         matchLabels:
#           kubernetes.io/metadata.name: external-http
#     ports:
#     - protocol: TCP
#       port: 8080
#   # Allow monitoring
#   - from:
#     - namespaceSelector:
#         matchLabels:
#           kubernetes.io/metadata.name: monitoring
#     ports:
#     - protocol: TCP
#       port: 8081

