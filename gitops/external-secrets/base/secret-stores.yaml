apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets

---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: vault-approle-cluster
  namespace: external-secrets
  annotations:
     argocd.argoproj.io/sync-wave: "2"
spec:
  provider:
    vault:
      server: "https://vault.buc.sh"
      path: "cluster/"
      version: "v2"
      auth:
        appRole:
          path: "approle"
          roleId: prod
          secretRef:
            name: "vault-secretid"
            key: "secretid"
            namespace: external-secrets

---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: vault-approle-secret
  namespace: external-secrets
  annotations:
     argocd.argoproj.io/sync-wave: "2"
spec:
  provider:
    vault:
      server: "https://vault.buc.sh"
      path: "secret/"
      version: "v2"
      auth:
        appRole:
          path: "approle"
          roleId: prod
          secretRef:
            name: "vault-secretid"
            key: "secretid"
            namespace: external-secrets

---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: cluster-local
spec:
  provider:
    kubernetes:
      remoteNamespace: external-secrets
      server:
        url: "https://kubernetes.default.svc"
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          namespace: default
          key: ca.crt
      auth:
        serviceAccount:
          name: external-secrets
          namespace: external-secrets
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: external-secrets-store-permissions
#   namespace: external-secrets
# rules:
# - apiGroups: [""]
#   resources:
#   - secrets
#   verbs:
#   - get
#   - list
#   - watch
# - apiGroups:
#   - authorization.k8s.io
#   resources:
#   - selfsubjectrulesreviews
#   verbs:
#   - create
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: use-k8s-secret-store
#   namespace: external-secrets
# roleRef:
#   kind: Role
#   name: external-secrets-store-permissions
#   apiGroup: rbac.authorization.k8s.io
# subjects:
# - kind: ServiceAccount
#   name: external-secrets
#   namespace: external-secrets