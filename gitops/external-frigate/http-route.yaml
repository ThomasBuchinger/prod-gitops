apiVersion: v1
kind: Namespace
metadata:
  name: external-frigate

---
apiVersion: v1
kind: Service
metadata:
  name: external-frigate
  namespace: external-frigate
spec:
  ports:
    - port: 8971
      protocol: TCP
      name: http
---
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  name: external-frigate
  namespace: external-frigate
  labels:
    kubernetes.io/service-name: external-frigate
addressType: IPv4
ports:
- name: http
  port: 8971
endpoints:
- addresses:
  - "10.0.0.9"
  conditions: {}

---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: cams-mtls-buc-sh
  namespace: external-frigate
spec:
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: external-gateway
    namespace: external-gateway
    sectionName: mtls
  hostnames:
  - "cams.mtls.buc.sh"
  rules:
  - backendRefs:
    - group: ""
      kind: Service
      name: external-frigate
      port: 8971
      weight: 1
    matches:
    - method: GET
      path:
        type: PathPrefix
        value: /
    - method: POST
      path:
        type: PathPrefix
        value: /api/faces/train
    - method: POST
      path:
        type: PathPrefix
        value: /api/review/viewed
 
  - matches:
    - path:
        type: PathPrefix
        value: /
    filters:
    - type: ExtensionRef
      extensionRef:
        group: gateway.envoyproxy.io
        kind: HTTPRouteFilter
        name: 403-denied

---
# increase local Rate Limit for Frigate
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: BackendTrafficPolicy
metadata:
  name: ratelimit-policy
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: cams-mtls-buc-sh
  rateLimit:
    type: Local
    local:
      rules:
      - limit:
          requests: 1000
          unit: Minute


---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: HTTPRouteFilter
metadata:
  name: 403-denied
spec:
  directResponse:
    contentType: text/html
    statusCode: 404
    body:
      type: Inline
      inline: <html><head><meta charset="UTF-8"></head><body><p style="margin-top:10%;font-size:4em;font-family:'Courier New', Courier, monospace;" align="center">Access Denied</p></body></html>

---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyExtensionPolicy
metadata:
  name: lua-geoip-block
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: cams-mtls-buc-sh
  lua:
  - type: Inline
    inline: |
      function envoy_on_request(request_handle)
        local allowed_countried = { AT=true, DE=true, CH=true, HR=true, IT=true }
        if not allowed_countried[request_handle:headers():get("X-Geo-Country")] then
          request_handle:respond(
            {[":status"] = "451"}, "Not available in your country")
        end
      end
