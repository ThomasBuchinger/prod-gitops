apiVersion: v1
kind: ConfigMap
metadata:
  name: paperless-env
  labels:
    app.kubernetes.io/name: paperless
data:
  COMPOSE_PROJECT_NAME: paperless
  PAPERLESS_REDIS: redis://redis-ephemeral-headless
  # Languages to install
  # PAPERLESS_OCR_LANGUAGES: eng deu
  # Lanugaes to use
  PAPERLESS_OCR_LANGUAGE: deu
  PAPERLESS_TIME_ZONE: Europe/Vienna
  PAPERLESS_DBENGINE: sqlite
  PAPERLESS_FILENAME_FORMAT: '{created_year}/{correspondent}/{created}_{title}'
  # Database and other internals
  PAPERLESS_DATA_DIR: /data/data
  # Storage for documents
  PAPERLESS_MEDIA_ROOT: /data/media
  # PAPERLESS_TRASH_DIR: /data/media/Trash
  # Not really used, but we put it on the PV anyway
  PAPERLESS_CONSUMPTION_DIR: /data/in
  PAPERLESS_PORT: "8000"                     # Overwrite K8s variable, used by gunicorn
  # PAPERLESS_URL: https://paperless.buc.sh    # Fix CSRF issue, when using https (http works) 
  # PAPERLESS_CSRF_TRUSTED_ORIGINS: https://paperless.mtls.buc.sh:8443,https://paperless.mtls.buc.sh,http://paperless.10.0.0.21.nip.io
  # PAPERLESS_CORS_ALLOWED_HOSTS: https://paperless.mtls.buc.sh:8443,https://paperless.mtls.buc.sh,http://paperless.10.0.0.21.nip.io
  # PAPERLESS_ALLOWED_HOSTS: paperless.mtls.buc.sh,paperless.10.0.0.21.nip.io
  # PAPERLESS_USE_X_FORWARD_HOST: "true"
  # PAPERLESS_USE_X_FORWARD_PORT: "true"
  # PAPERLESS_DEBUG: "true"

# ---
# apiVersion: external-secrets.io/v1
# kind: ExternalSecret
# metadata:
#   name: paperless-credentials
#   namespace: paperless
# spec:
#   refreshInterval: 1h
#   secretStoreRef:
#     name: k8s-evergreen
#     kind: ClusterSecretStore
#   target:
#     name: eso-paperless-credentials
#     creationPolicy: Owner
#   data:
#   - secretKey: PAPERLESS_ADMIN_USER
#     remoteRef:
#       key: static-secrets
#       property: cred_admin_user
#       conversionStrategy: Default
#       decodingStrategy: None
#       metadataPolicy: None
#   - secretKey: PAPERLESS_ADMIN_PASSWORD
#     remoteRef:
#       key: static-secrets
#       property: cred_admin_password
#       conversionStrategy: Default
#       decodingStrategy: None
#       metadataPolicy: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless
  namespace: paperless
  labels:
    app.kubernetes.io/name: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: paperless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: paperless
    spec:
      securityContext:
        runAsNonRoot: false
        fsGroup: 1000
      automountServiceAccountToken: true
      containers:
      - name: paperless
        image:  ghcr.io/paperless-ngx/paperless-ngx:2.18.2
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: paperless-env
        # - secretRef:
        #     name: eso-paperless-credentials
        ports:
        - name: http
          containerPort: 8000
        livenessProbe:
          failureThreshold: 6
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
          tcpSocket:
            port: 8000
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          tcpSocket:
            port: 8000
        resources:
          requests:
            cpu: 50m
            memory: 400Mi
          limits: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETUID
            - SETGID
            - FOWNER
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /data
          name: paperless-nfs
      volumes:
      - name: paperless-nfs
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: paperless
  namespace: paperless
  labels:
    app.kubernetes.io/name: paperless
spec:
  selector:
    app.kubernetes.io/name: paperless
  ports:
  - name: http
    protocol: TCP
    port: 8000
    targetPort: http
  - name: metrics
    protocol: TCP
    port: 8081
    targetPort: metrics

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: paperless-http
  namespace: paperless
  labels:
    app.kubernetes.io/name: paperless
spec:
  rules:
  - host: paperless-backup-test.10.0.0.21.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: paperless
            port:
              number: 8000

